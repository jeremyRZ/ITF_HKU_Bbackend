2021-04-09 10:03:11 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 10:03:11 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: jeremy(String) 
2021-04-09 10:03:11 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 10:55:55 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 10:55:55 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: jeremy(String) 
2021-04-09 10:55:55 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 13:27:25 [http-nio-8080-exec-7] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 13:27:25 [http-nio-8080-exec-7] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: simon(String) 
2021-04-09 13:27:25 [http-nio-8080-exec-7] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 13:27:31 [http-nio-8080-exec-9] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 13:27:31 [http-nio-8080-exec-9] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: guh(String) 
2021-04-09 13:27:31 [http-nio-8080-exec-9] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 13:28:21 [http-nio-8080-exec-1] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 13:28:21 [http-nio-8080-exec-1] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: simon(String) 
2021-04-09 13:28:21 [http-nio-8080-exec-1] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 14:14:02 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 14:14:02 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: simon(String) 
2021-04-09 14:14:02 [http-nio-8080-exec-3] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 14:14:02 [http-nio-8080-exec-3] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==>  Preparing: insert into user(name, password,post,emailAddress,cellNumber) values (?,?,?,?,?) 
2021-04-09 14:14:02 [http-nio-8080-exec-3] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==> Parameters: simon(String), 1d62a1543031040591bd3bb75f90486715b4dc3931a2b7abd69850e3495d8d05(String), null, null, null 
2021-04-09 14:14:03 [http-nio-8080-exec-3] ERROR c.i.b.config.GlobalExceptionHandler : 
 org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'post' cannot be null
### The error may exist in com/itf/backend/mapper/UserMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into user(name, password,post,emailAddress,cellNumber) values (?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'post' cannot be null
; Column 'post' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'post' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy59.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy60.add(Unknown Source)
	at com.itf.backend.service.RegService.add(RegService.java:23)
	at com.itf.backend.api.RegisterApi.add(RegisterApi.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'post' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 58 more
 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: simon(String) 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==>  Preparing: insert into user(name, password,post,emailAddress,cellNumber) values (?,?,?,?,?) 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==> Parameters: simon(String), 1d62a1543031040591bd3bb75f90486715b4dc3931a2b7abd69850e3495d8d05(String), inspector(String), ruizhao@hku.hk(String), 69986845(String) 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.itf.backend.mapper.UserMapper.add : 
 <==    Updates: 1 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE id=? 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: 3(Integer) 
2021-04-09 14:15:14 [http-nio-8080-exec-5] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: John Doe(String) 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 0 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==>  Preparing: insert into user(name, password,post,emailAddress,cellNumber) values (?,?,?,?,?) 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.itf.backend.mapper.UserMapper.add : 
 ==> Parameters: John Doe(String), 1d62a1543031040591bd3bb75f90486715b4dc3931a2b7abd69850e3495d8d05(String), inspector(String), ruizhao@hku.hk(String), 69986845(String) 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.itf.backend.mapper.UserMapper.add : 
 <==    Updates: 1 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE id=? 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: 4(Integer) 
2021-04-09 14:15:27 [http-nio-8080-exec-6] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 16:53:32 [http-nio-8080-exec-4] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 16:53:32 [http-nio-8080-exec-4] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: John Doe(String) 
2021-04-09 16:53:32 [http-nio-8080-exec-4] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 16:53:38 [http-nio-8080-exec-10] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 16:53:38 [http-nio-8080-exec-10] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: John Doe(String) 
2021-04-09 16:53:38 [http-nio-8080-exec-10] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
2021-04-09 16:54:33 [http-nio-8080-exec-2] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==>  Preparing: select * from user WHERE name=? 
2021-04-09 16:54:33 [http-nio-8080-exec-2] DEBUG c.i.b.mapper.UserMapper.findOne : 
 ==> Parameters: jeremy(String) 
2021-04-09 16:54:33 [http-nio-8080-exec-2] DEBUG c.i.b.mapper.UserMapper.findOne : 
 <==      Total: 1 
